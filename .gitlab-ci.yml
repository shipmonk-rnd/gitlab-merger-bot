include:
  - project: shipmonk-company/shipmonk-fulfillment/shipmonk
    ref: dae043882df67088401e9a602a1e93b0273456d1
    file: .gitlab/.gitlab-ci.yml

image:
  name: $CONFIG_IMAGE_DEPLOYMENT

stages:
  - Build
  - Repush
  - Update Tag

.build:
  rules:
    - if: '$CI_COMMIT_BRANCH != "master" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'
      changes:
        - "common/**/*"
        - "dashboard/**/*"
        - "server/**/*"
        - "Dockerfile"
        - "package.json"

build docker image (AMD):
  stage: Build
  extends:
    - .useDefaultCIJob
    - .build
    - .runner2L
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    CONFIG_IMAGE_NAME: gitlab-merger-bot
    CONFIG_CACHE_IMAGE_NAME: gitlab-merger-bot-ci-cache
    CONFIG_IMAGE_ARCH: amd64
    NODE_ARCH: x64
    NODE_TARGET: node14-linux-${NODE_ARCH}
  script:
    - export FILES_MD5=$(find common server dashboard ./Dockerfile -type f -exec md5sum {} \; | sort -k 2 | md5sum | head -c 32)
    - export CONFIG_IMAGE_TAG=prod-${FILES_MD5}-${CONFIG_IMAGE_ARCH}
    - echo "building image ${CONFIG_REGISTRY_NAME_EU}/${CONFIG_IMAGE_NAME}:${CONFIG_IMAGE_TAG}"
    - echo "cache repo is ${CONFIG_REGISTRY_NAME_EU}/${CONFIG_CACHE_IMAGE_NAME}"
    - mkdir -p /kaniko/.docker
    - |
      cat << EOF > /kaniko/.docker/config.json
      {
        "credHelpers": {
          "${CONFIG_REGISTRY_NAME_EU}": "ecr-login",
          "${CONFIG_REGISTRY_NAME_US}": "ecr-login"
        }
      }
      EOF
    - |
      /kaniko/executor \
        --build-arg TARGET=${NODE_TARGET} \
        --context "${CI_PROJECT_DIR}" \
        --dockerfile "${CI_PROJECT_DIR}/Dockerfile" \
        --destination "${CONFIG_REGISTRY_NAME_EU}/${CONFIG_IMAGE_NAME}:${CONFIG_IMAGE_TAG}" \
        --destination "${CONFIG_REGISTRY_NAME_US}/${CONFIG_IMAGE_NAME}:${CONFIG_IMAGE_TAG}" \
        --cache-repo "${CONFIG_REGISTRY_NAME_EU}/${CONFIG_CACHE_IMAGE_NAME}" \
        --cache=true

build docker image (ARM):
  extends:
    - build docker image (AMD)
    - .runnerTypeARM
  variables:
    CONFIG_IMAGE_ARCH: arm64
    NODE_ARCH: arm64

build docker image (multiarch):
  extends:
    - .useDefaultCIJob
    - .useDefaultDind
    - .build
  needs:
    - "build docker image (AMD)"
    - "build docker image (ARM)"
  stage: Repush
  variables:
    PUSH_TO_US: "true"
  script:
    - export FILES_MD5=$(find common server dashboard ./Dockerfile -type f -exec md5sum {} \; | sort -k 2 | md5sum | head -c 32)
    - export IMAGE_TAG=prod-${FILES_MD5}
    - docker pull ${CONFIG_REGISTRY_NAME_EU}/gitlab-merger-bot:${IMAGE_TAG}-amd64
    - docker pull ${CONFIG_REGISTRY_NAME_EU}/gitlab-merger-bot:${IMAGE_TAG}-arm64
    - docker manifest create ${CONFIG_REGISTRY_NAME_EU}/gitlab-merger-bot:${IMAGE_TAG} ${CONFIG_REGISTRY_NAME_EU}/gitlab-merger-bot:${IMAGE_TAG}-amd64 ${CONFIG_REGISTRY_NAME_EU}/gitlab-merger-bot:${IMAGE_TAG}-arm64
    - docker manifest push ${CONFIG_REGISTRY_NAME_EU}/gitlab-merger-bot:${IMAGE_TAG}
    - |
      if [[ "$PUSH_TO_US" == "true" ]]; then
        docker tag ${CONFIG_REGISTRY_NAME_EU}/gitlab-merger-bot:${IMAGE_TAG}-arm64 ${CONFIG_REGISTRY_NAME_US}/gitlab-merger-bot:${IMAGE_TAG}-arm64
        docker tag ${CONFIG_REGISTRY_NAME_EU}/gitlab-merger-bot:${IMAGE_TAG}-amd64 ${CONFIG_REGISTRY_NAME_US}/gitlab-merger-bot:${IMAGE_TAG}-amd64
        docker push ${CONFIG_REGISTRY_NAME_US}/gitlab-merger-bot:${IMAGE_TAG}-arm64
        docker push ${CONFIG_REGISTRY_NAME_US}/gitlab-merger-bot:${IMAGE_TAG}-amd64
        docker manifest create ${CONFIG_REGISTRY_NAME_US}/gitlab-merger-bot:${IMAGE_TAG} ${CONFIG_REGISTRY_NAME_US}/gitlab-merger-bot:${IMAGE_TAG}-amd64 ${CONFIG_REGISTRY_NAME_US}/gitlab-merger-bot:${IMAGE_TAG}-arm64
        docker manifest push ${CONFIG_REGISTRY_NAME_US}/gitlab-merger-bot:${IMAGE_TAG}
      fi

update image tag:
  stage: Update Tag
  extends:
    - .useDefaultCIJob
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - "common/**/*"
        - "dashboard/**/*"
        - "server/**/*"
        - "Dockerfile"
        - "package.json"
        - ".gitlab-ci.yml"
  variables:
    GITLAB_TOKEN: ${GITLAB_AUTH_TOKEN}
  script:
   - git config --global user.name "Kazim√≠r"
   - git config --global user.email "developers@shipmonk.com"
   - export FILES_MD5=$(find common server dashboard ./Dockerfile -type f -exec md5sum {} \; | sort -k 2 | md5sum | head -c 32)
   - export CONFIG_IMAGE_TAG=prod-${FILES_MD5}
   - export PUSHED=0
   - export LOOPS=5
   - |
      while [ $PUSHED -eq 0 ] && [ $LOOPS -gt 0 ]
      do
        git clone https://ShipMonkDeploy:${GITLAB_AUTH_TOKEN}@gitlab.com/ShipMonk/infrastructure.git
        cd infrastructure
        yq eval '(.images[] | select(has("name")) | select(.name == "515719629808.dkr.ecr.eu-west-1.amazonaws.com/gitlab-merger-bot")).newTag = "'${CONFIG_IMAGE_TAG}'"' -i argocd/jsonnet/services/gitlab-merger-bot/kustomization.yaml
        git add .
        git commit -m "Updated image gitlab-merger-bot to ${CONFIG_IMAGE_TAG}"
        git pull origin master -r
        git push origin master
        if [ $? -eq 0 ]
        then
          export PUSHED=1
        fi
        let "LOOPS-=1"
        cd ../
        rm -rf infrastructure
      done